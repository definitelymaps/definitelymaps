version: "3.8"

services:
  backend:
    image: definitelymaps/backend
    init: true
    build:
      context: backend
    command: sh -c "while ! nc -z postgres 5432 ; do sleep 1 ; done; npm run migrate-and-start"
    ports:
      - "127.0.0.1:5000:5000"
    environment:
      - APP_HOST=0.0.0.0
      - APP_PORT=5000
      - APP_SECRET=MySecret
      - NODE_ENV=development
      - POSTGRES_USER=postgres
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_PASSWORD=MySecret
      - POSTGRES_DATABASE=postgres
    volumes:
      - ./backend/.npmrc:/home/node/app/.npmrc
      - ./backend/package.json:/home/node/app/package.json
      - ./backend/package-lock.json:/home/node/app/package-lock.json
      - ./backend/tsconfig.json:/home/node/app/tsconfig.json
      - ./backend/src:/home/node/app/src
    depends_on:
      - postgres

  frontend:
    image: definitelymaps/frontend
    init: true
    build:
      context: frontend
    ports:
      - "127.0.0.1:3000:3000"
    environment:
      - NODE_ENV=development
    volumes:
      - ./frontend/.npmrc:/home/node/app/.npmrc
      - ./frontend/package.json:/home/node/app/package.json
      - ./frontend/package-lock.json:/home/node/app/package-lock.json
      - ./frontend/tsconfig.json:/home/node/app/tsconfig.json
      - ./frontend/src:/home/node/app/src
      - ./frontend/public:/home/node/app/public
    depends_on:
      - backend

  postgres:
    image: postgres:14.3-alpine
    init: true
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      POSTGRES_PASSWORD: "MySecret"
    volumes:
      - postgres:/var/lib/postgresql/data


volumes:
  postgres:
    name: definitelymaps-postgres-volume
